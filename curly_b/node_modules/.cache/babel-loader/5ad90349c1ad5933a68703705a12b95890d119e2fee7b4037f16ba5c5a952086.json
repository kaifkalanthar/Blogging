{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MOHAMED KAIF\\\\OneDrive\\\\Documents\\\\React.js\\\\Blogging\\\\curly_b\\\\src\\\\component\\\\logIn.jsx\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport { useContext, useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { UserContext } from \"../userContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [redirect, setRedirect] = useState(false);\n  const {\n    setUserInfo\n  } = useContext(UserContext);\n  async function login(ev) {\n    ev.preventDefault();\n    const response = await fetch('http://localhost:4000/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include'\n    });\n    if (response.ok) {\n      response.json().then(userInfo => {\n        setUserInfo(userInfo);\n        setRedirect(true);\n      });\n    } else {\n      alert('wrong credentials');\n    }\n  }\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form-container\",\n      onSubmit: login,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"text-field\",\n        placeholder: \"username\",\n        value: username,\n        onChange: ev => setUsername(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"text-field\",\n        type: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: ev => setPassword(ev.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n// class Login extends Form {\n//     state = {\n//         data: { username: \"\", password: \"\" },\n//         errors: {}\n//     }\n//     schema = {\n//         username: Joi.string().required().email().label(\"Username\"),\n//         password: Joi.string().required().label(\"Password\")\n//     }\n\n// try {\n//     const { data } = this.state;\n//     const { data: jwt } = await http.post(\"http://localhost:4000/login\", {\n//         username: data.username,\n//         password: data.password\n//     }).then(response => {\n//         var token = response.data.token;\n//         localStorage.setItem('token', JSON.stringify(token));\n//     }).catch(error => {\n//         if (!error.response) {\n//             this.errorStatus = 'Error: Network Error';\n//         } else {\n//             this.errorStatus = error.response.data.message;\n//         }\n//     })\n//     console.log(jwt);\n// } catch (ex) {\n//     if (ex.response && ex.response.status === 400) {\n//         const errors = { ...this.state.errors };\n//         errors.username = ex.response.data;\n//         this.setState({ errors });\n//     }\n// }\n//  }\n\n//         return (\n\n// }\n\n// export default Login;\n_s(Login, \"3VespTTJBo/yuHyCEqvZYWrum8M=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Component","useContext","useState","Navigate","UserContext","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","redirect","setRedirect","setUserInfo","login","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","credentials","ok","json","then","userInfo","alert","to","fileName","_jsxFileName","lineNumber","columnNumber","id","children","onSubmit","type","className","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/MOHAMED KAIF/OneDrive/Documents/React.js/Blogging/curly_b/src/component/logIn.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport {useContext, useState} from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {UserContext} from \"../userContext\";\r\n\r\nexport default function Login() {\r\n  const [username,setUsername] = useState('');\r\n  const [password,setPassword] = useState('');\r\n  const [redirect,setRedirect] = useState(false);\r\n  const {setUserInfo} = useContext(UserContext);\r\n  async function login(ev) {\r\n    ev.preventDefault();\r\n    const response = await fetch('http://localhost:4000/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({username, password}),\r\n      headers: {'Content-Type':'application/json'},\r\n      credentials: 'include',\r\n    });\r\n    if (response.ok) {\r\n      response.json().then(userInfo => {\r\n        setUserInfo(userInfo);\r\n        setRedirect(true);\r\n      });\r\n    } else {\r\n      alert('wrong credentials');\r\n    }\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Navigate to={'/'} />\r\n  }\r\n  return (\r\n    <div id=\"form\">\r\n                <form id=\"form-container\" onSubmit={login}>\r\n                <h1>Login</h1>\r\n      <input type=\"text\"\r\n            className = \"text-field\"\r\n             placeholder=\"username\"\r\n             value={username}\r\n             onChange={ev => setUsername(ev.target.value)}/>\r\n      <input \r\n      className = \"text-field\"\r\n      type=\"password\"\r\n             placeholder=\"password\"\r\n             value={password}\r\n             onChange={ev => setPassword(ev.target.value)}/>\r\n      <button>Login</button>\r\n                </form>\r\n            </div>\r\n    \r\n  );\r\n}\r\n\r\n// class Login extends Form {\r\n//     state = {\r\n//         data: { username: \"\", password: \"\" },\r\n//         errors: {}\r\n//     }\r\n//     schema = {\r\n//         username: Joi.string().required().email().label(\"Username\"),\r\n//         password: Joi.string().required().label(\"Password\")\r\n//     }\r\n\r\n    \r\n\r\n        // try {\r\n        //     const { data } = this.state;\r\n        //     const { data: jwt } = await http.post(\"http://localhost:4000/login\", {\r\n        //         username: data.username,\r\n        //         password: data.password\r\n        //     }).then(response => {\r\n        //         var token = response.data.token;\r\n        //         localStorage.setItem('token', JSON.stringify(token));\r\n        //     }).catch(error => {\r\n        //         if (!error.response) {\r\n        //             this.errorStatus = 'Error: Network Error';\r\n        //         } else {\r\n        //             this.errorStatus = error.response.data.message;\r\n        //         }\r\n        //     })\r\n        //     console.log(jwt);\r\n        // } catch (ex) {\r\n        //     if (ex.response && ex.response.status === 400) {\r\n        //         const errors = { ...this.state.errors };\r\n        //         errors.username = ex.response.data;\r\n        //         this.setState({ errors });\r\n        //     }\r\n        // }\r\n  //  }\r\n    \r\n//         return (\r\n            \r\n    \r\n// }\r\n\r\n// export default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}